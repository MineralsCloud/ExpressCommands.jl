var documenterSearchIndex = {"docs":
[{"location":"commands/#Commands","page":"Commands","title":"Commands","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"CurrentModule = ExpressCommands","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The main command is xps, by default it installs to JULIA_DEPOT_PATH/bin.","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The first-order commands are","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"xps\n├── print\n└── run","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The usage are","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"print\nrun","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"And the secondary commands are","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"xps eos\n    ├── fit\n    └── plot","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"ExpressCommands.EOS.fit\nExpressCommands.EOS.plot","category":"page"},{"location":"commands/#ExpressCommands.EOS.fit","page":"Commands","title":"ExpressCommands.EOS.fit","text":"Fit an equation of state from cfgfile for calculation calc.\n\nArgs\n\ncalc: the calculation type. Acceptable options are \"scf\" for self-consistent calculation and \"optim\" for structure optimizations.\ncfgfile: the file to be printed. Available extensions are .jls, .json, .yaml, .yml or .toml.\n\n\n\n\n\n","category":"function"},{"location":"commands/#ExpressCommands.EOS.plot","page":"Commands","title":"ExpressCommands.EOS.plot","text":"Plot an equation of state from file to file \"out\".\n\nArgs\n\nfile: a .jld2 file that saves the equation of state.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ExpressCommands","category":"page"},{"location":"#ExpressCommands","page":"Home","title":"ExpressCommands","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExpressCommands.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExpressCommands.","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"commands.md\",\n]\nDepth = 3","category":"page"},{"location":"#main-index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ExpressCommands]","category":"page"},{"location":"#ExpressCommands.COMMAND_ENTRY_DOC_STUB","page":"Home","title":"ExpressCommands.COMMAND_ENTRY_DOC_STUB","text":"The main command xps.\n\n\n\n\n\n","category":"constant"},{"location":"#ExpressCommands.comonicon_install-Tuple{}","page":"Home","title":"ExpressCommands.comonicon_install","text":"comonicon_install(;kwargs...)\n\nInstall the CLI manually. This will use the default configuration in Comonicon.toml, if it exists. For more detailed reference, please refer to Comonicon documentation.\n\n\n\n\n\n","category":"method"},{"location":"#ExpressCommands.comonicon_install_path-Tuple{}","page":"Home","title":"ExpressCommands.comonicon_install_path","text":"comonicon_install_path(;[yes=false])\n\nInstall the PATH and FPATH to your shell configuration file. You can use comonicon_install_path(;yes=true) to skip interactive prompt. For more detailed reference, please refer to Comonicon documentation.\n\n\n\n\n\n","category":"method"},{"location":"#ExpressCommands.show","page":"Home","title":"ExpressCommands.show","text":"Print the file in a pretty format.\n\nArgs\n\nfile: the file to be printed. Available extensions are .jld2, .json, .yaml, .yml or .toml.\n\n\n\n\n\n","category":"function"}]
}
