var documenterSearchIndex = {"docs":
[{"location":"contributing/#contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Pages = [\"contributing.md\"]","category":"page"},{"location":"contributing/#Download-the-project","page":"Contributing","title":"Download the project","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Similar to installation, run","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.update()\npkg\"dev ExpressCommands\"","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"in the REPL.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Then the package will be cloned to your local machine at a path. On macOS, by default is located at ~/.julia/dev/ExpressCommands unless you modify the JULIA_DEPOT_PATH environment variable. (See Julia's official documentation on how to do this.) In the following text, we will call it PKGROOT.","category":"page"},{"location":"contributing/#instantiating","page":"Contributing","title":"Instantiate the project","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Go to PKGROOT, start a new Julia session and run","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.instantiate()","category":"page"},{"location":"contributing/#How-to-build-docs","page":"Contributing","title":"How to build docs","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Usually, the up-to-state doc is available in here, but there are cases where users need to build the doc themselves.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"After instantiating the project, go to PKGROOT, run","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --color=yes docs/make.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"in your terminal. In a while a folder PKGROOT/docs/build will appear. Open PKGROOT/docs/build/index.html with your favorite browser and have fun!","category":"page"},{"location":"contributing/#How-to-run-tests","page":"Contributing","title":"How to run tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"After instantiating the project, go to PKGROOT, run","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --color=yes test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"in your terminal.","category":"page"},{"location":"contributing/#Style-Guide","page":"Contributing","title":"Style Guide","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Follow the style of the surrounding text when making changes. When adding new features please try to stick to the following points whenever applicable.","category":"page"},{"location":"contributing/#Julia","page":"Contributing","title":"Julia","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"4-space indentation;\nmodules spanning entire files should not be indented, but modules that have surrounding code should;\ndo not manually align syntax such as = or :: over adjacent lines;\nuse function ... end when a method definition contains more than one top-level expression;\nrelated short-form method definitions don't need a new line between them;\nunrelated or long-form method definitions must have a blank line separating each one;\nsurround all binary operators with whitespace except for ::, ^, and :;\nfiles containing a single module ... end must be named after the module;\nmethod arguments should be ordered based on the amount of usage within the method body;\nmethods extended from other modules must follow their inherited argument order, not the above rule;\nexplicit return should be preferred except in short-form method definitions;\navoid dense expressions where possible e.g. prefer nested ifs over complex nested ?s;\ninclude a trailing , in vectors, tuples, or method calls that span several lines;\ndo not use multiline comments (#= and =#);\nwrap long lines as near to 92 characters as possible, this includes docstrings;\nfollow the standard naming conventions used in Base.","category":"page"},{"location":"contributing/#Markdown","page":"Contributing","title":"Markdown","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Use unbalanced # headers, i.e. no # on the right-hand side of the header text;\ninclude a single blank line between top-level blocks;\ndo not hard wrap lines;\nuse emphasis (*) and bold (**) sparingly;\nalways use fenced code blocks instead of indented blocks;\nfollow the conventions outlined in the Julia documentation page on documentation.","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"CurrentModule = ExpressCommands","category":"page"},{"location":"public/#Commands","page":"Library","title":"Commands","text":"","category":"section"},{"location":"public/","page":"Library","title":"Library","text":"The main command is xps, by default it installs to JULIA_DEPOT_PATH/bin.","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"The first-order commands are","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps\n├── show\n└── run\n└── graph","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"The usage are","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"show\nrun\ngraph","category":"page"},{"location":"public/#ExpressCommands.show","page":"Library","title":"ExpressCommands.show","text":"Print the file in a pretty format.\n\nArgs\n\nfile: the file to be printed. Available extensions are .jld2, .json, .yaml, .yml or .toml.\n\n\n\n\n\n","category":"function"},{"location":"public/#ExpressCommands.run","page":"Library","title":"ExpressCommands.run","text":"Run a configuration file (with an absolute path will be better).\n\nArgs\n\nfile: the file to be run. Acceptable extensions are .json, .yaml, .yml, or .toml.\n\n\n\n\n\n","category":"function"},{"location":"public/","page":"Library","title":"Library","text":"You can always type","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps --help","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"to see the help information, or type","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps --version","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"to see the current version of xps.","category":"page"},{"location":"public/#The-equation-of-state-workflow-commands","page":"Library","title":"The equation of state workflow commands","text":"","category":"section"},{"location":"public/","page":"Library","title":"Library","text":"The secondary commands are","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps eos\n    ├── run\n    └── plot\n    └── fit","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"ExpressCommands.EOS.run\nExpressCommands.EOS.fit\nExpressCommands.EOS.plot","category":"page"},{"location":"public/#ExpressCommands.EOS.run","page":"Library","title":"ExpressCommands.EOS.run","text":"Run a configuration file (with an absolute path will be better). It is equivalent to xps run <file>.\n\nArgs\n\nfile: the file to be run. Acceptable extensions are .json, .yaml, .yml, or .toml.\n\n\n\n\n\n","category":"function"},{"location":"public/#ExpressCommands.EOS.fit","page":"Library","title":"ExpressCommands.EOS.fit","text":"Fit an equation of state from a configuration file for calculation calc.\n\nArgs\n\ncalc: the calculation type. Acceptable options are \"scf\" for self-consistent calculation and \"optim\" for structure optimizations.\nfile: the file which saves the raw data. Available extensions are .jld2, .json, .yaml, .yml or .toml.\n\n\n\n\n\n","category":"function"},{"location":"public/#The-phonon-workflow-commands","page":"Library","title":"The phonon workflow commands","text":"","category":"section"},{"location":"public/","page":"Library","title":"Library","text":"The secondary commands are","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps ph\n    └── run","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"ExpressCommands.Ph.run","category":"page"},{"location":"public/#ExpressCommands.Ph.run","page":"Library","title":"ExpressCommands.Ph.run","text":"Run a configuration file (with an absolute path will be better). It is equivalent to xps run <file>.\n\nArgs\n\nfile: the file to be run. Acceptable extensions are .json, .yaml, .yml, or .toml.\n\n\n\n\n\n","category":"function"},{"location":"public/#The-QHA-workflow-commands","page":"Library","title":"The QHA workflow commands","text":"","category":"section"},{"location":"public/","page":"Library","title":"Library","text":"The secondary commands are","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"xps qha\n    └── run","category":"page"},{"location":"public/","page":"Library","title":"Library","text":"ExpressCommands.QHA.run","category":"page"},{"location":"public/#ExpressCommands.QHA.run","page":"Library","title":"ExpressCommands.QHA.run","text":"Run a configuration file (with an absolute path will be better). It is equivalent to xps run <file>.\n\nArgs\n\nfile: the file to be run. Acceptable extensions are .json, .yaml, .yml, or .toml.\n\n\n\n\n\n","category":"function"},{"location":"installation/#installation","page":"Installation guide","title":"Installation guide","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Here are the installation instructions for package ExpressCommands. If you have trouble installing it, please refer to our Troubleshooting page for more information.","category":"page"},{"location":"installation/#Install-Julia","page":"Installation guide","title":"Install Julia","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"First, you should install Julia. We recommend downloading it from its official website. Please follow the detailed instructions on its website if you have to build Julia from source. Some computing centers provide preinstalled Julia. Please contact your administrator for more information in that case. Here's some additional information on how to set up Julia on HPC systems.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"If you have Homebrew installed, open Terminal.app and type","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"brew install --cask julia","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"if you want to install it as a prebuilt binary app. Type","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"brew install julia","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"if you want to install it as a formula.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"If you want to install multiple Julia versions in the same operating system, a suggested way is to use a version manager such as asdf. First, install asdf. Then, run","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"asdf install julia 1.6.7  # or other versions of Julia\nasdf global julia 1.6.7","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"to install Julia and set v1.6.7 as a global version.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"You can also try another cross-platform installer for the Julia programming language juliaup.","category":"page"},{"location":"installation/#Which-version-should-I-pick?","page":"Installation guide","title":"Which version should I pick?","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"You can install the \"Current stable release\" or the \"Long-term support (LTS) release\".","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"The \"Current stable release\" is the latest release of Julia. It has access to newer features, and is likely faster.\nThe \"Long-term support release\" is an older version of Julia that has continued to receive bug and security fixes. However, it may not have the latest features or performance improvements.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"For most users, you should install the \"Current stable release\", and whenever Julia releases a new version of the current stable release, you should update your version of Julia. Note that any code you write on one version of the current stable release will continue to work on all subsequent releases.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"For users in restricted software environments (e.g., your enterprise IT controls what software you can install), you may be better off installing the long-term support release because you will not have to update Julia as frequently.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Versions higher than v1.3, especially v1.6, are strongly recommended. This package may not work on v1.0 and below. Since the Julia team has set v1.6 as the LTS release, we will gradually drop support for versions below v1.6.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Julia and Julia packages support multiple operating systems and CPU architectures; check this table to see if it can be installed on your machine. For Mac computers with M-series processors, this package and its dependencies may not work. Please install the Intel-compatible version of Julia (for macOS x86).","category":"page"},{"location":"installation/#Install-ExpressCommands","page":"Installation guide","title":"Install ExpressCommands","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Now I am using macOS as a standard platform to explain the following steps:","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Open Terminal.app, and type julia to start an interactive session (known as the REPL).\nRun the following commands and wait for them to finish:\njulia> using Pkg\n\njulia> Pkg.update()\n\njulia> Pkg.add(\"ExpressCommands\")\nRun\njulia> using ExpressCommands\nand have fun!\nWhile using, please keep this Julia session alive. Restarting might recompile the package and cost some time.","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"If you want to install the latest in-development (probably buggy) version of ExpressCommands, type","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"using Pkg\nPkg.update()\npkg\"add ExpressCommands#master\"","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"in the second step above.","category":"page"},{"location":"installation/#Update-ExpressCommands","page":"Installation guide","title":"Update ExpressCommands","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"Please watch our GitHub repository for new releases. Once we release a new version, you can update ExpressCommands by typing","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"using Pkg\nPkg.update(\"ExpressCommands\")\nPkg.gc()","category":"page"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"in Julia REPL.","category":"page"},{"location":"installation/#Uninstall-and-reinstall-ExpressCommands","page":"Installation guide","title":"Uninstall and reinstall ExpressCommands","text":"","category":"section"},{"location":"installation/","page":"Installation guide","title":"Installation guide","text":"To uninstall, in a Julia session, run\njulia> using Pkg\n\njulia> Pkg.rm(\"ExpressCommands\")\n\njulia> Pkg.gc()\nPress ctrl+d to quit the current session. Start a new Julia session and reinstall ExpressCommands.","category":"page"},{"location":"troubleshooting/#Troubleshooting","page":"Troubleshooting","title":"Troubleshooting","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"This page collects some possible errors you may encounter and trick how to fix them.","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"If you have additional tips, please submit a PR with suggestions.","category":"page"},{"location":"troubleshooting/#Installation-problems","page":"Troubleshooting","title":"Installation problems","text":"","category":"section"},{"location":"troubleshooting/#Cannot-find-the-Julia-executable","page":"Troubleshooting","title":"Cannot find the Julia executable","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Make sure you have Julia installed in your environment. Please download the latest stable version for your platform. If you are using macOS, the recommended way is to use Homebrew. If you do not want to install Homebrew or you are using other platforms that Julia supports, download the corresponding binaries. And then create a symbolic link /usr/local/bin/julia to the Julia executable. If /usr/local/bin/ is not in your $PATH, export it to your $PATH. Some clusters, like Habanero, Comet, or Expanse, already have Julia installed as a module, you may just module load julia to use it. If not, either install by yourself or contact your administrator.","category":"page"},{"location":"troubleshooting/#Loading-ExpressCommands","page":"Troubleshooting","title":"Loading ExpressCommands","text":"","category":"section"},{"location":"troubleshooting/#Why-is-Julia-compiling/loading-modules-so-slow?-What-can-I-do?","page":"Troubleshooting","title":"Why is Julia compiling/loading modules so slow? What can I do?","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"First, we recommend you download the latest version of Julia. Usually, the newest version has the best performance.","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"If you just want Julia to do a simple task and only once, you could start Julia REPL with","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"julia --compile=min","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"to minimize compilation or","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"julia --optimize=0","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"to minimize optimizations, or just use both. Or you could make a system image and run with","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"julia --sysimage custom-image.so","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"See Fredrik Ekre's talk for details.","category":"page"},{"location":"troubleshooting/#Plotting","page":"Troubleshooting","title":"Plotting","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"ExpressCommands uses Plots.jl to plot the equations of state, etc. However, on some operating systems, Plots.jl may not successfully install, or some other strange issues may occur.","category":"page"},{"location":"troubleshooting/#Choosing-backends","page":"Troubleshooting","title":"Choosing backends","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Plots.jl support different plotting backends (see its documentation), some backends may work, and some may not. You could install all of them and select the default plotting backend by setting an environment variable in your ~/.julia/config/startup.jl file (if the file does not exist, create it). To do this, add e.g. the following line of code: ENV[\"PLOTS_DEFAULT_BACKEND\"] = \"PlotlyJS\".","category":"page"},{"location":"troubleshooting/#\"Could-not-connect-to-display\"-error","page":"Troubleshooting","title":"\"Could not connect to display\" error","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"If you come across the following error:","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"qt.qpa.xcb: could not connect to display\nqt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\n\nAvailable platform plugins are: linuxfb, minimal, offscreen, vnc, xcb.\n\nconnect: Connection refused\nGKS: can't connect to GKS socket application\n\nGKS: Open failed in routine OPEN_WS\nGKS: GKS not in proper state. GKS must be either in the state WSOP or WSAC in routine ACTIVATE_WS","category":"page"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"It may be caused by Plots.plot cannot find a display to show the figure. This could happen on some remote clusters where you do not have access to displays. But it should not be a problem since we save plotted figures to file systems. Therefore, you could download the figure later.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ExpressCommands","category":"page"},{"location":"#ExpressCommands","page":"Home","title":"ExpressCommands","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExpressCommands.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Index for the complete list of documented functions and types.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The code is hosted on GitHub, with some continuous integration services to test its validity.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This repository is created and maintained by @singularitti. You are very welcome to contribute.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package can be installed with the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add ExpressCommands","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or, equivalently, via the Pkg API:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg; Pkg.add(\"ExpressCommands\")","category":"page"},{"location":"#Command-Line-Interface","page":"Home","title":"Command Line Interface","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Add ~/.julia/bin to your PATH to enable command line interface. Or run ExpressCommands.comonicon_install_path() to install everything automatically.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Sometimes, you won't trigger the package build of Julia. You can install the command line interface manually via ExpressCommands.comonicon_install().","category":"page"},{"location":"#Completions","page":"Home","title":"Completions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you are using ZSH, you can enable the auto-completion by ExpressCommands.comonicon_install_path(). Or add the FPATH to your .zshrc","category":"page"},{"location":"","page":"Home","title":"Home","text":"export FPATH=\"$HOME/.julia/completions:$FPATH\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"if you do not have oh-my-zsh installed, you need to add","category":"page"},{"location":"","page":"Home","title":"Home","text":"autoload -Uz compinit && compinit","category":"page"},{"location":"","page":"Home","title":"Home","text":"to your .zshrc as well.","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"STABLE &mdash; documentation of the most recently tagged version.\nDEV &mdash; documentation of the in-development version.","category":"page"},{"location":"#Project-Status","page":"Home","title":"Project Status","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is tested against, and being developed for, Julia 1.6 and above on Linux, macOS, and Windows.","category":"page"},{"location":"#Questions-and-Contributions","page":"Home","title":"Questions and Contributions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Usage questions can be posted on our discussion page.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Contributions are very welcome, as are feature requests and suggestions. Please open an issue if you encounter any problems. The contributing page has a few guidelines that should be followed when opening pull requests and contributing code.","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"installation.md\",\n    \"contributing.md\",\n    \"troubleshooting.md\",\n]\nDepth = 3","category":"page"},{"location":"#Library-Outline","page":"Home","title":"Library Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"public.md\"]","category":"page"},{"location":"#main-index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"public.md\"]","category":"page"}]
}
